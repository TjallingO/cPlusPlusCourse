With an expression template to add VI objects the resulting expression is
still a temp object whose elements are the sums of the elements of the four VI
objects.

Let N be the number of elements in each VI object, of which we have 4.

Without using an expression template the result would be obtained as follows:
First v1 + v2 would be computed and stored as a tmp (lets call it v12)
Then v12 + v3 would be computed as stored as a tmp (v123)
Then finally v123 + v4 would be computed and stored as the resulting tmp.
In this case we would have (4-1) * 2 * N = 6N index operations.


However, by using an expression template, the result is obtained, without
computing the result after addition of another VI object, it simply passes the
 addresses of the indexes, nothing is actually computed until the end:
(((v1 + v2)  + v3) + v4)
This results in the number of index computations being 4N.

Clearly 4N < 6N, so by using an expression template we can reduce the number
of index computations.
