//%default-actions quiet
%filenames parser
%scanner ../scanner/scanner.h

//%baseclass-preinclude      x.h or <x.h>


//    Semantic values used by the parser.
//    Two often used types are predefined, extend or alter as seems fit.
//    When %union is not used, use:
//%stype   struct-name/class-name
//%union
//{
//      //  define union fields here. The fields shown are for demo-use only
//    int          i;
//    unsigned     u;
//    std::string *s;
//};
//  Typed nonterminals indicate the union-value that's returned:
//%type<i>
//    rule1 or TOKEN
//    rule2

// lowest precedence
//%token
//%nonassoc
//%left
//%right
// highest precedence

%baseclass-preinclude cmath

%token NR
%stype std::size_t
%left '!'
%left '='
%left '+'
%left '*'
%left '^'
%right '-'

%%

input:
      //empty
|
    input line
;

line:
    '\n'
|
    expr '\n'
    {
      std::cout << "\t" << $1 << std::endl;
    }
;

expr:
    NR
|
    '-' expr
    {
      $$ = -$2;
    }
|
    expr '+' expr
    {
      $$ = $1 + $3;
    }
|
    expr '*' expr
    {
      $$ = $1 * $3;
    }
|
    expr '!' '=' expr
    {
      $$ = ($1 != $4);
    }
|
    expr '=' '=' expr
    {
      $$ = ($1 == $4);
    }
|
    expr '^' expr //wordt dit wel op binary exponent manier gedaan?
    {
      $$ = pow($1, $3);
    }

;
